{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.6"
    },
    "colab": {
      "name": "Assignment 2.1 - Lists-Arrays-Matrices-Slicing-Operations.ipynb",
      "provenance": [],
      "collapsed_sections": [
        "SddyBOqESqI3",
        "B0d0bZTPSqJt",
        "41s3mP40SqJu",
        "2723cpAmSqJ9",
        "HW-DCxqYSqJ_",
        "rtJez7eQSqKR",
        "b0wHwGILSqK1",
        "R1Tb3bZRSqK6",
        "NjzCwneqSqK8",
        "k0PjPmXFSqLE",
        "ub1p7H-ySqLK",
        "CjityCpjSqLN",
        "Ij1nBxrqSqLO",
        "q1Oz8VUESqLW",
        "-KW3x4J8SqLX",
        "b8gUfXFJSqL4",
        "dMK87aRjSqOJ",
        "jypIA8jcSqOW",
        "KHy_Mb3ESqOp"
      ]
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p-TSl0unSqIM",
        "colab_type": "text"
      },
      "source": [
        "## Assignment 2.1:  Vectors, matrices and multidimensional arrays (Due: 2/19/20)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FN6oI2wKSqIQ",
        "colab_type": "text"
      },
      "source": [
        "Adapted from Robert Johansson: Source code listings for [Numerical Python - A Practical Techniques Approach for Industry](http://www.apress.com/9781484205549) (ISBN 978-1-484205-54-9).\n",
        "\n",
        "The source code listings can be downloaded from http://www.apress.com/9781484205549"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GSfe_EPoSqIR",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wzf4pVjLSqIV",
        "colab_type": "text"
      },
      "source": [
        "### The NumPy array object"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "53iK3rV9SqIW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([[1, 2], [3, 4], [5, 6]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0H8uRa16SqIZ",
        "colab_type": "code",
        "outputId": "614c7909-d9ea-4933-d079-95af675fcb7c",
        "colab": {}
      },
      "source": [
        "type(data)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RJ8xE6u5SqIc",
        "colab_type": "code",
        "outputId": "7914060b-f845-4021-fcd6-1cd83f61d78f",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2],\n",
              "       [3, 4],\n",
              "       [5, 6]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tCdiJKdVSqIf",
        "colab_type": "code",
        "outputId": "9c5861a7-581b-4fca-efc7-5cef0b115724",
        "colab": {}
      },
      "source": [
        "data.ndim"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2BSDeZDzSqIj",
        "colab_type": "code",
        "outputId": "1145df7e-c248-4983-af16-5a084ee82d6d",
        "colab": {}
      },
      "source": [
        "data.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GUM_ifDLSqIl",
        "colab_type": "code",
        "outputId": "9379c41d-505b-4b6f-ee4b-bfa756af8e1a",
        "colab": {}
      },
      "source": [
        "data.size"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8Cdi9GIXSqIo",
        "colab_type": "code",
        "outputId": "4b44e5ad-a165-4f1f-b077-4186b1ff3a49",
        "colab": {}
      },
      "source": [
        "data.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int32')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WduPeTnDSqIq",
        "colab_type": "code",
        "outputId": "cd803312-0463-4fcb-ecaa-e1ca513e64a4",
        "colab": {}
      },
      "source": [
        "data.nbytes"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "24"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VB84hM-bSqIt",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #1: </font> \n",
        "1. Create a 3-dimensional array of integers\n",
        "2. Find all 3 of its dimensions, print them out one per line"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3Nk3pGDdSqIu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "threed_array = np.random.randint(-10,10, size=(5,3,4))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1bhxuCOkSqIx",
        "colab_type": "code",
        "outputId": "2589e445-185b-4c67-872d-bcb881ec2cd4",
        "colab": {}
      },
      "source": [
        "threed_array.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5, 3, 4)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HOpixt68SqIz",
        "colab_type": "code",
        "outputId": "30d8f1ab-9123-48d0-f6c0-2c22fd5766f7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66
        }
      },
      "source": [
        "for x in threed_array.shape:\n",
        "    print(x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "5\n",
            "3\n",
            "4\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SddyBOqESqI3",
        "colab_type": "text"
      },
      "source": [
        "## Data types"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bjyoUdi1SqI4",
        "colab_type": "code",
        "outputId": "082e80e6-107f-479f-c17b-fae711b1779d",
        "colab": {}
      },
      "source": [
        "np.array([1, 2, 3], dtype=np.int)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LQBymXVOSqI7",
        "colab_type": "code",
        "outputId": "681a79e8-9979-4b36-edfb-16a23e490fed",
        "colab": {}
      },
      "source": [
        "np.array([1, 2, 3], dtype=np.float)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.,  2.,  3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2FT69RvHSqI-",
        "colab_type": "code",
        "outputId": "2730d37b-7f7f-4921-d2f7-7e44b573a938",
        "colab": {}
      },
      "source": [
        "np.array([1, 2, 3], dtype=np.complex)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.+0.j,  2.+0.j,  3.+0.j])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VkFuqMpVSqJB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([1, 2, 3], dtype=np.float)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AQ9wO0d4SqJF",
        "colab_type": "code",
        "outputId": "2600ea1a-580c-4dab-a1ae-169c805695fe",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.,  2.,  3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "87B9HhTPSqJH",
        "colab_type": "code",
        "outputId": "d4bec71d-239c-4cc8-f119-60c8fc643608",
        "colab": {}
      },
      "source": [
        "data.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('float64')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a6f40-FaSqJK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([1, 2, 3], dtype=np.int)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VlfkTYqBSqJP",
        "colab_type": "code",
        "outputId": "de2fea49-210e-4da3-dedb-bceb0fdfe0b6",
        "colab": {}
      },
      "source": [
        "data.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int32')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VeEEpzyfSqJR",
        "colab_type": "code",
        "outputId": "01ba423f-e30b-4c6c-adb8-1828a2c93dc7",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YFf9olQfSqJV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([1, 2, 3], dtype=np.float)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rh5euLAhSqJX",
        "colab_type": "code",
        "outputId": "077e869f-3db9-4911-f9bb-5a6faa8529a4",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.,  2.,  3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U178ZLJYSqJa",
        "colab_type": "code",
        "outputId": "1499b1b0-3523-402d-8906-f447d77f41ea",
        "colab": {}
      },
      "source": [
        "data.astype(np.int)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KlkkEyXzSqJc",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "d1 = np.array([1, 2, 3], dtype=float)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ku7MjtlUSqJf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "d2 = np.array([1, 2, 3], dtype=complex)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_rAWTmGISqJh",
        "colab_type": "code",
        "outputId": "9ff95418-e61b-427f-f299-a421d139d5d4",
        "colab": {}
      },
      "source": [
        "d1 + d2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 2.+0.j,  4.+0.j,  6.+0.j])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ViTYFY_vSqJk",
        "colab_type": "code",
        "outputId": "ad96faad-2874-4880-f517-5f91265b1351",
        "colab": {}
      },
      "source": [
        "(d1 + d2).dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('complex128')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ecjKMUKoSqJo",
        "colab_type": "code",
        "outputId": "282c03da-733d-4c48-f12e-2f9067ac32a1",
        "colab": {}
      },
      "source": [
        "np.sqrt(np.array([-1, 0, 1]))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: RuntimeWarning: invalid value encountered in sqrt\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ nan,   0.,   1.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UkEZXVNESqJq",
        "colab_type": "code",
        "outputId": "78130f8d-0b7d-4014-8d72-92201868aefb",
        "colab": {}
      },
      "source": [
        "np.sqrt(np.array([-1, 0, 1], dtype=complex))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.+1.j,  0.+0.j,  1.+0.j])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "B0d0bZTPSqJt",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #2: </font>\n",
        "1. Create a 2-dimensional numpy array of type float32\n",
        "2. Add it to another of same dimensions but of type float64\n",
        "3. Guess what type the entries of the sum array would be, and check your guess by carrying out the addition."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NHGnBP0STgrO",
        "colab_type": "code",
        "outputId": "5bfddc65-45c0-47a7-f2db-b9d634fb804a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 115
        }
      },
      "source": [
        "#Create 2-dimensional array with data type float32\n",
        "d1 = np.array(([1, 2], [2,2,]), dtype = 'float32')\n",
        "print(\"First array type:\", d1.dtype)\n",
        "\n",
        "#Create 2-dimensional array with data type float64\n",
        "d2 = np.array(([1, 2], [2,2,]), dtype = float)\n",
        "print(\"Second array type:\", d2.dtype)\n",
        "\n",
        "print(\"\\nThe type of entries after carrying the addition would be float64\")\n",
        "print(\"n-------------------------------------------\")\n",
        "\n",
        "sum = d1 + d2\n",
        "print(\"Type of entries the sum would have:\",sum.dtype)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "First array type: float32\n",
            "Second array type: float64\n",
            "\n",
            "The type of entries after carrying the addition would be float64\n",
            "n-------------------------------------------\n",
            "Type of entries the sum would have: float64\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "41s3mP40SqJu",
        "colab_type": "text"
      },
      "source": [
        "### Real and imaginary parts"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x3tWI7HSSqJv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([1, 2, 3], dtype=complex)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ztH31QoSSqJ0",
        "colab_type": "code",
        "outputId": "b9015c58-33a7-4c68-cdd4-f5ffff3eabf7",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.+0.j,  2.+0.j,  3.+0.j])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZFmszlI2SqJ4",
        "colab_type": "code",
        "outputId": "5e41ab6e-10f0-4ec0-b798-3d9e2434bb42",
        "colab": {}
      },
      "source": [
        "data.real"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.,  2.,  3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cuc0ArvUSqJ7",
        "colab_type": "code",
        "outputId": "d4447971-90b4-44f0-e753-591f47e11802",
        "colab": {}
      },
      "source": [
        "data.imag"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.,  0.,  0.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2723cpAmSqJ9",
        "colab_type": "text"
      },
      "source": [
        "## Creating arrays"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HW-DCxqYSqJ_",
        "colab_type": "text"
      },
      "source": [
        "### Arrays created from lists and other array-like objects"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TxzvF4OQSqKA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array(np.arange(16))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nsghqa8WSqKC",
        "colab_type": "code",
        "outputId": "99b3f2e5-396d-4a62-d5a6-5ebb20704232",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QvBgT_kFSqKE",
        "colab_type": "code",
        "outputId": "e245e6e8-4f42-4ea9-f376-8726d0a74efb",
        "colab": {}
      },
      "source": [
        "data.reshape(-1,4)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  1,  2,  3],\n",
              "       [ 4,  5,  6,  7],\n",
              "       [ 8,  9, 10, 11],\n",
              "       [12, 13, 14, 15]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wEIeToK_SqKH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([[1, 2], [3, 4]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xdh4yXDNSqKK",
        "colab_type": "code",
        "outputId": "6f3d1886-43e7-4464-9fdf-9ab090c37c72",
        "colab": {}
      },
      "source": [
        "data.ndim"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1Edq5EbgSqKP",
        "colab_type": "code",
        "outputId": "82725a8b-f860-4106-bd71-a65ae05fdf32",
        "colab": {}
      },
      "source": [
        "data.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rtJez7eQSqKR",
        "colab_type": "text"
      },
      "source": [
        "### Arrays filled with special constant values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jxlwh-eJSqKR",
        "colab_type": "code",
        "outputId": "6c9169f6-3417-4c7b-80db-7f0386392124",
        "colab": {}
      },
      "source": [
        "np.zeros((2, 3))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0., 0.],\n",
              "       [0., 0., 0.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QL5TCO8mSqKU",
        "colab_type": "code",
        "outputId": "40928cd0-72ee-40cd-d724-dab8d7e3b549",
        "colab": {}
      },
      "source": [
        "np.ones(4)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1., 1., 1., 1.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jxBZ9uzqSqKX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.ones(4)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qoJ71PuGSqKZ",
        "colab_type": "code",
        "outputId": "b7b184ef-2f16-4d1d-8d5a-5d61c62c881d",
        "colab": {}
      },
      "source": [
        "data.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('float64')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0x5kiUblSqKd",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.ones(4, dtype=np.int64)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pTZGTiweSqKf",
        "colab_type": "code",
        "outputId": "60a8b3d0-98ac-45a7-a0e7-80ae535b0df2",
        "colab": {}
      },
      "source": [
        "data.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int64')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LIgNyR9wSqKh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x1 = 5.4 * np.ones(10)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mPTsG07rSqKi",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x2 = np.full(10, 5.4)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BI3Ju5eoSqKp",
        "colab_type": "code",
        "outputId": "087f3e5b-257d-4963-8dac-f05afcc0f874",
        "colab": {}
      },
      "source": [
        "x2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7fq38jI1SqKr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x1 = np.empty(5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9meJE6__SqKt",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x1.fill(3.0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A-54mQAmSqKv",
        "colab_type": "code",
        "outputId": "881aa645-da66-4d97-ae9a-3342c16e8912",
        "colab": {}
      },
      "source": [
        "x1"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3., 3., 3., 3., 3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B4IRhGYTSqKx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x2 = np.full(5, 3.0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j-e3zxVsSqKz",
        "colab_type": "code",
        "outputId": "126132c6-a6a4-437f-adbe-24fe5a2baebb",
        "colab": {}
      },
      "source": [
        "x2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3., 3., 3., 3., 3.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b0wHwGILSqK1",
        "colab_type": "text"
      },
      "source": [
        "### Arrays filled with incremental sequences"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A4-hO43ESqK1",
        "colab_type": "code",
        "outputId": "7397fdc2-bc06-45f3-b21b-e540936634fd",
        "colab": {}
      },
      "source": [
        "np.arange(0.0, 10, 1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0., 1., 2., 3., 4., 5., 6., 7., 8., 9.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "30ot2ajCSqK3",
        "colab_type": "code",
        "outputId": "218ba7c3-0e8d-4e60-df03-2d2f58b5f8b0",
        "colab": {}
      },
      "source": [
        "np.linspace(0, 10, 11)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R1Tb3bZRSqK6",
        "colab_type": "text"
      },
      "source": [
        "### Arrays filled with logarithmic sequences"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JHtMDSyuSqK6",
        "colab_type": "code",
        "outputId": "b100c3ac-94ec-4ddd-cac3-3fdb5d6eea39",
        "colab": {}
      },
      "source": [
        "np.logspace(0, 2, 5)  # 5 data points between 10**0=1 to 10**2=100"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([  1.        ,   3.16227766,  10.        ,  31.6227766 ,\n",
              "       100.        ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NjzCwneqSqK8",
        "colab_type": "text"
      },
      "source": [
        "### Mesh-grid arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o0gFNv6ESqK9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.array([-1, 0, 1])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PEIoAnUCSqK-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y = np.array([-2, 0, 2])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yE4L-ZgPSqLA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X, Y = np.meshgrid(x, y)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DQv_nf6gSqLB",
        "colab_type": "code",
        "outputId": "fad7f7cb-d167-4844-db67-de05e5a093ca",
        "colab": {}
      },
      "source": [
        "X"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-1,  0,  1],\n",
              "       [-1,  0,  1],\n",
              "       [-1,  0,  1]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lYljAi-CSqLD",
        "colab_type": "code",
        "outputId": "0dd8b70d-d392-43bd-94bb-cea5c1c4baaf",
        "colab": {}
      },
      "source": [
        "Y"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-2, -2, -2],\n",
              "       [ 0,  0,  0],\n",
              "       [ 2,  2,  2]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "k0PjPmXFSqLE",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #3: </font> Meshgrid produces the Cartesian product of the arrays, except that the x-values and y-values are kept seperate\n",
        "\n",
        "1. Generate a meshgrid X,Y of x = a sequence of integers 1...5 and y of -1,0,1\n",
        "2. How many entries will X have? Y?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i0iV_bHkTyTz",
        "colab_type": "code",
        "outputId": "4a5cd610-adc2-40a1-d4b6-76591fae0b5c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "x = np.array(np.arange(1,6))\n",
        "x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4, 5])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cAo0yLdbWpPH",
        "colab_type": "code",
        "outputId": "3965a25b-8725-4270-bb9c-e5e1700e2a2a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "y = np.array(np.arange(-1,2))\n",
        "y"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-1,  0,  1])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bIMuo3pDWlgi",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X, Y = np.meshgrid(x,y)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rG1nKru-SqLF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Z = (X + Y) ** 2"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TW-5z2RoSqLI",
        "colab_type": "code",
        "outputId": "ff13efc9-8067-4fb4-d015-9ff0b556b813",
        "colab": {}
      },
      "source": [
        "Z"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[9, 4, 1],\n",
              "       [1, 0, 1],\n",
              "       [1, 4, 9]], dtype=int32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ub1p7H-ySqLK",
        "colab_type": "text"
      },
      "source": [
        "### Creating uninitialized arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J_ghDnAKSqLL",
        "colab_type": "code",
        "outputId": "08f37af7-e8e8-4560-8263-0bd245c0d49c",
        "colab": {}
      },
      "source": [
        "np.empty(3, dtype=np.float)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([8.15931808e-312, 0.00000000e+000, 6.95229481e-310])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CjityCpjSqLN",
        "colab_type": "text"
      },
      "source": [
        "### Creating arrays with properties of other arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ELwZPHuISqLN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def f(x):\n",
        "    y = np.ones_like(x)\n",
        "    # compute with x and y\n",
        "    return y"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ij1nBxrqSqLO",
        "colab_type": "text"
      },
      "source": [
        "### Creating special matrix arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gTjULGl8SqLP",
        "colab_type": "code",
        "outputId": "5afdc981-5e0f-4b97-9b60-b84b8f3abb58",
        "colab": {}
      },
      "source": [
        "np.identity(4)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 0., 0., 0.],\n",
              "       [0., 1., 0., 0.],\n",
              "       [0., 0., 1., 0.],\n",
              "       [0., 0., 0., 1.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iid7TOSrSqLQ",
        "colab_type": "code",
        "outputId": "4cc35735-1368-4289-a7c0-707ae9695a99",
        "colab": {}
      },
      "source": [
        "np.eye(3, k=1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 1., 0.],\n",
              "       [0., 0., 1.],\n",
              "       [0., 0., 0.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jvtuRKXSSqLT",
        "colab_type": "code",
        "outputId": "944db9db-97ca-4311-c208-f839ff409316",
        "colab": {}
      },
      "source": [
        "np.eye(3, k=-1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0., 0.],\n",
              "       [1., 0., 0.],\n",
              "       [0., 1., 0.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fT2iGFh_SqLU",
        "colab_type": "code",
        "outputId": "f0a8a5b4-10de-4548-b7ec-11b9306093d6",
        "colab": {}
      },
      "source": [
        "np.diag(np.arange(0, 20, 5))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  0,  0,  0],\n",
              "       [ 0,  5,  0,  0],\n",
              "       [ 0,  0, 10,  0],\n",
              "       [ 0,  0,  0, 15]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q1Oz8VUESqLW",
        "colab_type": "text"
      },
      "source": [
        "## Index and slicing"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-KW3x4J8SqLX",
        "colab_type": "text"
      },
      "source": [
        "### One-dimensional arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dw3zkkZvSqLX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "a = np.arange(0, 11)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xdmuqg6oSqLZ",
        "colab_type": "code",
        "outputId": "4b48311b-b70a-4168-d122-70bb35f4c0c7",
        "colab": {}
      },
      "source": [
        "a"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1mBPtbMxSqLb",
        "colab_type": "code",
        "outputId": "9f9bae2f-1b5f-4b3a-c229-931d17b0bd95",
        "colab": {}
      },
      "source": [
        "a[0]  # the first element"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x0cmh27oSqLd",
        "colab_type": "code",
        "outputId": "7c9e26b6-dd51-47b3-da13-114ce449bdd8",
        "colab": {}
      },
      "source": [
        "a[-1] # the last element"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3ga0sEFwSqLh",
        "colab_type": "code",
        "outputId": "dcbd2e5e-daed-447b-d4dc-752d8cd53106",
        "colab": {}
      },
      "source": [
        "a[4]  # the fifth element, at index 4"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bsVAHozTSqLj",
        "colab_type": "code",
        "outputId": "14c0559f-926f-480b-8cad-89ff0a129f02",
        "colab": {}
      },
      "source": [
        "a[1:-1]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IYnXb_7ySqLk",
        "colab_type": "code",
        "outputId": "06318b92-0d96-4f01-c252-236fde326b59",
        "colab": {}
      },
      "source": [
        "a[1:-1:2]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 3, 5, 7, 9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fAI8tU0RSqLl",
        "colab_type": "code",
        "outputId": "3c8cb9be-dcd5-4825-9a60-72ffc5d71f3b",
        "colab": {}
      },
      "source": [
        "a[:5]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3CBP7DyzSqLn",
        "colab_type": "code",
        "outputId": "6a3f65a7-77cc-4513-cb6c-3703d4285258",
        "colab": {}
      },
      "source": [
        "a[-5:]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 6,  7,  8,  9, 10])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PrM0QYJsSqLo",
        "colab_type": "code",
        "outputId": "d8096456-878e-4927-c6df-ed3db3b30a8c",
        "colab": {}
      },
      "source": [
        "a[::-2]\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([10,  8,  6,  4,  2,  0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xVz5-_RfSqLp",
        "colab_type": "text"
      },
      "source": [
        "## Multidimensional arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dGpSWRppSqLp",
        "colab_type": "code",
        "outputId": "aa6d92b6-5d0a-4e2d-d76c-9f57c7b67afa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 115
        }
      },
      "source": [
        "#The f is special function that takes two arguments m and n\n",
        "f = lambda m, n: n + 10 * m\n",
        "#The function is called with m=6, n = 6 to create a matrix (2-dim array)\n",
        "A = np.fromfunction(f, (6, 6), dtype=int)\n",
        "#prints it our\n",
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  1,  2,  3,  4,  5],\n",
              "       [10, 11, 12, 13, 14, 15],\n",
              "       [20, 21, 22, 23, 24, 25],\n",
              "       [30, 31, 32, 33, 34, 35],\n",
              "       [40, 41, 42, 43, 44, 45],\n",
              "       [50, 51, 52, 53, 54, 55]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MrFRpCCBSqLr",
        "colab_type": "code",
        "outputId": "b1b0e8c8-4f35-4c46-a63d-b6b8a076bf8a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "A[:, 1]  # the second column\n",
        "\n",
        "A.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('int64')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZnUbZZYtSqLt",
        "colab_type": "code",
        "outputId": "d13356bf-7c5f-4ed9-c9ce-6ffc2bf4e348",
        "colab": {}
      },
      "source": [
        "A[1, :]  # the second row"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([10, 11, 12, 13, 14, 15])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5d1FTLfcSqLv",
        "colab_type": "code",
        "outputId": "0fe660f4-f14c-4e02-949f-453ad73a1b1e",
        "colab": {}
      },
      "source": [
        "A[:3, :3]  # upper half diagonal block matrix"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  1,  2],\n",
              "       [10, 11, 12],\n",
              "       [20, 21, 22]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LN5tplNwSqLw",
        "colab_type": "code",
        "outputId": "67d44d95-1c63-4a9e-f7f9-bf7a1f7c18ba",
        "colab": {}
      },
      "source": [
        "A[3:, :3]  # lower left off-diagonal block matrix"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[30, 31, 32],\n",
              "       [40, 41, 42],\n",
              "       [50, 51, 52]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FCfnVN4-SqLx",
        "colab_type": "code",
        "outputId": "3efbc7eb-e496-4e64-d69e-c8ab942938af",
        "colab": {}
      },
      "source": [
        "A[::2, ::2]  # every second element starting from 0, 0"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  2,  4],\n",
              "       [20, 22, 24],\n",
              "       [40, 42, 44]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mBpdG4WgSqL1",
        "colab_type": "code",
        "outputId": "26757786-d4d5-4a96-a067-5f46d1beb237",
        "colab": {}
      },
      "source": [
        "A[1::2, 1::3]  # every second element starting from 1, 1"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[11, 14],\n",
              "       [31, 34],\n",
              "       [51, 54]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b8gUfXFJSqL4",
        "colab_type": "text"
      },
      "source": [
        "### Views"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EFNL71WKSqL4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = A[1:5, 1:5]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VSZ9eI4iSqL6",
        "colab_type": "code",
        "outputId": "010dcd00-cb1e-4690-d2b7-0c5fd682a27b",
        "colab": {}
      },
      "source": [
        "B"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[11, 12, 13, 14],\n",
              "       [21, 22, 23, 24],\n",
              "       [31, 32, 33, 34],\n",
              "       [41, 42, 43, 44]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4knqGD5mSqL7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#Be extremely careful here: we are not setting B to zeros, but also changing A[1:5, 1:5] also to zeros!!!\n",
        "B[:, :] = 0"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kqC4FsHcSqL9",
        "colab_type": "code",
        "outputId": "3e293093-2f91-428b-b05f-2e4a5c5e5696",
        "colab": {}
      },
      "source": [
        "#As expected\n",
        "B"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 0, 0, 0],\n",
              "       [0, 0, 0, 0],\n",
              "       [0, 0, 0, 0],\n",
              "       [0, 0, 0, 0]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OVYKtLsRSqL-",
        "colab_type": "code",
        "outputId": "63821b5e-aef1-4b6e-b386-3c0cde4347e0",
        "colab": {}
      },
      "source": [
        "#But is this expected?\n",
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  1,  2,  3,  4,  5],\n",
              "       [10,  0,  0,  0,  0, 15],\n",
              "       [20,  0,  0,  0,  0, 25],\n",
              "       [30,  0,  0,  0,  0, 35],\n",
              "       [40,  0,  0,  0,  0, 45],\n",
              "       [50, 51, 52, 53, 54, 55]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r44jujZfSqL_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#If we don't want to change the original matrix use .copy() function of the array object\n",
        "C = B[1:3, 1:3].copy()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gff5EZoSSqMA",
        "colab_type": "code",
        "outputId": "be758d64-bdc5-4ac8-f595-4181832a6c24",
        "colab": {}
      },
      "source": [
        "C"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 0],\n",
              "       [0, 0]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xLdpuYylSqMC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "C[:, :] = 1  # this does not affect B since C is a copy of the view B[1:3, 1:3]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tZ3S4tASSqMC",
        "colab_type": "code",
        "outputId": "73ad3e46-286b-4f75-c627-0b79852125d1",
        "colab": {}
      },
      "source": [
        "C"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 1],\n",
              "       [1, 1]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CFKoA6zqSqMF",
        "colab_type": "code",
        "outputId": "c56ecf21-2cbb-481e-9cba-f15dbc0c973b",
        "colab": {}
      },
      "source": [
        "#Chaing C contents does not affect B!\n",
        "B"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 0, 0, 0],\n",
              "       [0, 0, 0, 0],\n",
              "       [0, 0, 0, 0],\n",
              "       [0, 0, 0, 0]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1tjw8is-SqMG",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #4 </font>:\n",
        "1. Create an 2-dimensional numpy array of type int16\n",
        "2. Add it to another of same dimensions but of type float64\n",
        "3. Guess what type the entries of the sum array would be, and check your guess by carrying out the addition."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mxiiIqTcW5vs",
        "colab_type": "code",
        "outputId": "d8c1d0e5-9fe3-46aa-d276-f726ccccfcd4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "#Create an 2-dimensional array of type int16\n",
        "data1 = np.array(([1, 2], [2,1]), dtype = 'int16')\n",
        "data1"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2],\n",
              "       [2, 2]], dtype=int16)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qQgVg_TSYhKT",
        "colab_type": "code",
        "outputId": "a4cf3f89-c12c-4ecf-e415-876973b16c9b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "#Create an 2-dimensional array of type int16\n",
        "data2 = np.array(([3, 1], [3,2]), dtype = 'float64')\n",
        "data2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[3., 1.],\n",
              "       [3., 2.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KHZ8esrKZ2lb",
        "colab_type": "code",
        "outputId": "5d41cb0f-f283-4064-f83d-dc35ff81d8e4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 82
        }
      },
      "source": [
        "#Add data1 and data2 together\n",
        "data3 = np.concatenate((data1, data2))\n",
        "data3\n",
        "\n",
        "#print(\"The entries will be of 'float64' data type \")\n",
        "#data3.dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 2.],\n",
              "       [2., 2.],\n",
              "       [3., 1.],\n",
              "       [3., 2.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lqkaG-E3SqMH",
        "colab_type": "text"
      },
      "source": [
        "### Fancy indexing and Boolean-valued indexing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QhzTeVKMSqMH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.linspace(0, 1, 11)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l0Hl2QfdSqMI",
        "colab_type": "code",
        "outputId": "61cf341c-8cef-4ad7-ed17-37949fd22836",
        "colab": {}
      },
      "source": [
        "A[np.array([0, 2, 4])]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0. ,  0.2,  0.4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B6Cv5oTsSqMJ",
        "colab_type": "code",
        "outputId": "c3c75546-4688-4079-e2ad-1ce1d5136d0f",
        "colab": {}
      },
      "source": [
        "A[[0, 2, 4]]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0. ,  0.2,  0.4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ID3mM-e3SqML",
        "colab_type": "code",
        "outputId": "4735a6b7-c744-4fe8-cd5e-bffe70acb0c0",
        "colab": {}
      },
      "source": [
        "A > 0.5 "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([False, False, False, False, False, False,  True,  True,  True,\n",
              "        True,  True], dtype=bool)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-cXP93R6SqMN",
        "colab_type": "code",
        "outputId": "82c8afcc-2f3a-4227-98cc-5b2a75b07692",
        "colab": {}
      },
      "source": [
        "A[A > 0.5]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.6,  0.7,  0.8,  0.9,  1. ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "60kfpJnISqMO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.arange(10)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GVEHdmXHSqMP",
        "colab_type": "code",
        "outputId": "b44cbed3-23c2-422d-829b-dcafe90a4e88",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "47rKWFrhSqMQ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "indices = [2, 4, 6]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LoqtqqIlSqMR",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = A[indices]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LdAEgRqYSqMT",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B[0] = -1  # this does not affect A"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WGRQnhrLSqMV",
        "colab_type": "code",
        "outputId": "2dc55f7c-f40a-4c84-88c9-3c16a8581667",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ExcVm4dvSqMW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A[indices] = -1"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qnl8r3I3SqMX",
        "colab_type": "code",
        "outputId": "6ba43aff-9b42-4fea-b42e-63346b0dc829",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  1, -1,  3, -1,  5, -1,  7,  8,  9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Db9dstLZSqMY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.arange(10)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6GY2H1iWSqMZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = A[A > 5]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z0LNOR0WSqMc",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B[0] = -1  # this does not affect A"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IglXX7LUSqMd",
        "colab_type": "code",
        "outputId": "d0561115-9b59-4023-8ddc-a712285f638c",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bjttgFYhSqMg",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A[A > 5] = -1"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zlmk_eCvSqMi",
        "colab_type": "code",
        "outputId": "9e2a6616-0901-4170-ad14-bba54ed19d14",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  1,  2,  3,  4,  5, -1, -1, -1, -1])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R8r1I1rtSqMj",
        "colab_type": "text"
      },
      "source": [
        "## Reshaping and resizing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aEt09qq2SqMj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([[1, 2], [3, 4]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a4tDCu-iSqMk",
        "colab_type": "code",
        "outputId": "7a0c68b9-bbd6-4d5e-cf77-b9250ea44699",
        "colab": {}
      },
      "source": [
        "np.reshape(data, (1, 4))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2, 3, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n8oYCSm3SqMl",
        "colab_type": "code",
        "outputId": "3835f1cb-0440-472e-a3c8-925bcc8f8f94",
        "colab": {}
      },
      "source": [
        "data.reshape(4)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CgcbWHd1SqMm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.array([[1, 2], [3, 4]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YVenMCn1SqMs",
        "colab_type": "code",
        "outputId": "b7665a22-3c02-4125-88ed-6ff02d9040c1",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2],\n",
              "       [3, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MzFCXuUBSqMu",
        "colab_type": "code",
        "outputId": "bdbcc22c-8894-4da4-9565-ce7b97cfc311",
        "colab": {}
      },
      "source": [
        "data.flatten()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qtxswXQdSqMv",
        "colab_type": "code",
        "outputId": "825709b5-6e2f-4f95-cc03-0b2d8fbf89bf",
        "colab": {}
      },
      "source": [
        "data.flatten().shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7rFGrP9aSqMx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.arange(0, 5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ctxVvsS4SqMy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "column = data[:, np.newaxis]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u0vSBxibSqMz",
        "colab_type": "code",
        "outputId": "083f4df1-d982-4ebc-aed1-4e17222d706f",
        "colab": {}
      },
      "source": [
        "column"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0],\n",
              "       [1],\n",
              "       [2],\n",
              "       [3],\n",
              "       [4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tw_mMj3ESqM1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "row = data[np.newaxis, :]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sDpDx1ZuSqM4",
        "colab_type": "code",
        "outputId": "fb5070ea-f472-4ad5-f762-0d27096046d8",
        "colab": {}
      },
      "source": [
        "row"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 1, 2, 3, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uw8CTBygSqM5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.arange(5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KowFEiNaSqM6",
        "colab_type": "code",
        "outputId": "da896945-a12a-4851-c625-0d5868b75cde",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jXSmsIZ7SqM7",
        "colab_type": "code",
        "outputId": "052c77e9-64f7-404d-9aeb-0f1b4b111ab8",
        "colab": {}
      },
      "source": [
        "data = np.arange(9)\n",
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gmPQErObSqM9",
        "colab_type": "code",
        "outputId": "bd77de1a-4049-4a57-d805-2a0dd5293490",
        "colab": {}
      },
      "source": [
        "data.reshape(3, 3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 1, 2],\n",
              "       [3, 4, 5],\n",
              "       [6, 7, 8]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7LqikQk6SqM-",
        "colab_type": "code",
        "outputId": "6adaf880-df9d-47a3-b97c-762ddf4f8f88",
        "colab": {}
      },
      "source": [
        "np.transpose(data)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 3, 6],\n",
              "       [1, 4, 7],\n",
              "       [2, 5, 8]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 222
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U9zHtYA7SqM_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.random.randn(4, 3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J1fnij2SSqNA",
        "colab_type": "code",
        "outputId": "0773950c-8b9c-4901-df70-4a09a91c7e67",
        "colab": {}
      },
      "source": [
        "data.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uYpbY839SqND",
        "colab_type": "code",
        "outputId": "5c973c89-c37e-4e78-ceda-32dc3f2ecd28",
        "colab": {}
      },
      "source": [
        "data.T.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 4)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rGpZohGiSqNE",
        "colab_type": "code",
        "outputId": "f4b55123-4d88-4650-ee68-cff2f3d092ce",
        "colab": {}
      },
      "source": [
        "np.vstack((data, data, data)).shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(12, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E5ZUEjScSqNI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.arange(5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fa2rcsyPSqNJ",
        "colab_type": "code",
        "outputId": "f3e258e9-f631-4e49-beb3-e2793a1177db",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zBIeJTwxSqNK",
        "colab_type": "code",
        "outputId": "c1be1253-695c-42d8-b038-7183c7c31356",
        "colab": {}
      },
      "source": [
        "np.hstack((data, data, data))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3GPtsc4iSqNL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = data[:, np.newaxis]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bthhHJ-DSqNM",
        "colab_type": "code",
        "outputId": "14292e8f-7aad-41ba-aa73-7a991906e64c",
        "colab": {}
      },
      "source": [
        "np.hstack((data, data, data))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 0, 0],\n",
              "       [1, 1, 1],\n",
              "       [2, 2, 2],\n",
              "       [3, 3, 3],\n",
              "       [4, 4, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 133
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UE2-IwkFSqNO",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #5 </font>\n",
        "- Create a three dimensional array of size 3 x 3 x 4 of random integers named A\n",
        "- Stack 3 copies of the A vertically and name it B.  Can you guess the dimensions of the resulting array?\n",
        "- Now stack 3 copies of the transpose of A horizontally, and name it C.  Can you guess the dimension of C? Is it same as that of B?\n",
        "- Now use the flatten() method of A, call the result A_flat.  What is the shape of A_flat?\n",
        "- Reconstruct A from A_flat using reshape() method"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XFEn9nTlcfzM",
        "colab_type": "code",
        "outputId": "4ab81e5f-6722-4eec-a914-196570e93f97",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 196
        }
      },
      "source": [
        "#Create an 3-dimensional array of random integers named A \n",
        "A = np.random.randint(0, 10, size=(3, 3, 3))\n",
        "A"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[0, 9, 0],\n",
              "        [4, 7, 4],\n",
              "        [9, 6, 9]],\n",
              "\n",
              "       [[0, 7, 0],\n",
              "        [2, 7, 3],\n",
              "        [7, 2, 4]],\n",
              "\n",
              "       [[7, 4, 1],\n",
              "        [1, 1, 5],\n",
              "        [9, 3, 0]]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "urVTvRnwh67B",
        "colab_type": "code",
        "outputId": "b1d936d0-9cb4-4f80-ee12-5954098f7f33",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "#Stack 3 copies of the A vertically and name it B.\n",
        "B = np.vstack((A, A, A))\n",
        "print(\"Dimension will be '[9,3,3]'\")\n",
        "\n",
        "B.shape"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Dimension will be '[9,3,3]'\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(9, 3, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3W01z9enlpIU",
        "colab_type": "code",
        "outputId": "f9219125-b3f2-4410-f0d0-ab7ec702f2fd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "#Stack 3 copies of the A horizintally and name it C.\n",
        "#It would not have the same dimensions as B\n",
        "C = np.hstack((A, A, A))\n",
        "\n",
        "print(\"Dimension will be '[3,9,3]'\")\n",
        "C.shape"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Dimension will be '[3,9,3]'\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 9, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3lLj3wLSm09B",
        "colab_type": "code",
        "outputId": "192977a0-2303-4e49-c29f-d4ed1d23aa6d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "A_flat = A.flatten()\n",
        "A_flat\n",
        "\n",
        "#A_flat.shape"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 9, 0, 4, 7, 4, 9, 6, 9, 0, 7, 0, 2, 7, 3, 7, 2, 4, 7, 4, 1, 1,\n",
              "       1, 5, 9, 3, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KQFXZTECkUId",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 196
        },
        "outputId": "306c89d3-0043-4f69-b226-db375dce0a75"
      },
      "source": [
        "np.reshape(A,(3,3,3))"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[0, 9, 0],\n",
              "        [4, 7, 4],\n",
              "        [9, 6, 9]],\n",
              "\n",
              "       [[0, 7, 0],\n",
              "        [2, 7, 3],\n",
              "        [7, 2, 4]],\n",
              "\n",
              "       [[7, 4, 1],\n",
              "        [1, 1, 5],\n",
              "        [9, 3, 0]]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pjnEvb74SqNP",
        "colab_type": "text"
      },
      "source": [
        "## Vectorized expressions"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3yB8nO-uSqNQ",
        "colab_type": "text"
      },
      "source": [
        "### Arithmetic operations"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PMIQGCiwSqNR",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.array([[1, 2], [3, 4]]) "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QpDvFN2MSqNS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y = np.array([[5, 6], [7, 8]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dn-6Iln4SqNT",
        "colab_type": "code",
        "outputId": "46af9c44-2cce-4d44-fd3b-42fa04373057",
        "colab": {}
      },
      "source": [
        "x + y"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 6,  8],\n",
              "       [10, 12]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PEa-7cYuSqNW",
        "colab_type": "code",
        "outputId": "329acecd-842c-4b30-b142-97f0abe6e11d",
        "colab": {}
      },
      "source": [
        "y - x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[4, 4],\n",
              "       [4, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UmxrlxzoSqNX",
        "colab_type": "code",
        "outputId": "9a68e4e8-3643-48be-fd35-f43e4c54a3fc",
        "colab": {}
      },
      "source": [
        "x * y"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 5, 12],\n",
              "       [21, 32]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 138
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yhx7vChOSqNY",
        "colab_type": "code",
        "outputId": "26939a35-ab97-405f-dfd5-39abd560c5e4",
        "colab": {}
      },
      "source": [
        "y / x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 5.        ,  3.        ],\n",
              "       [ 2.33333333,  2.        ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BxaoNaWlSqNb",
        "colab_type": "code",
        "outputId": "e8e01424-3b4d-4ba3-c34e-e7054c12e371",
        "colab": {}
      },
      "source": [
        "x * 2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[2, 4],\n",
              "       [6, 8]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FDc7twI5SqNc",
        "colab_type": "code",
        "outputId": "930be40c-0d26-41ea-aa91-70aaf1794637",
        "colab": {}
      },
      "source": [
        "2 ** x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 2,  4],\n",
              "       [ 8, 16]], dtype=int32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 141
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1l9VVG4LSqNd",
        "colab_type": "code",
        "outputId": "60ff6d97-cfe1-425d-a923-ff353323844f",
        "colab": {}
      },
      "source": [
        "y / 2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 2.5,  3. ],\n",
              "       [ 3.5,  4. ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tRtcrMylSqNh",
        "colab_type": "code",
        "outputId": "4f014020-a35e-4443-f86c-53383fa244c0",
        "colab": {}
      },
      "source": [
        "(y / 2).dtype"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('float64')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CUrhGeq-SqNj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.array([1, 2, 3, 4]).reshape(2,2)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j8sySDLTSqNl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "z = np.array([1, 2, 3, 4])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3R_k1S-zSqNm",
        "colab_type": "code",
        "outputId": "74518a2a-be94-4f43-9cf5-be51dc0a6efb",
        "colab": {}
      },
      "source": [
        "x / z"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "operands could not be broadcast together with shapes (2,2) (4,) ",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[1;32m<ipython-input-146-b88ced08eb6a>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mx\u001b[0m \u001b[1;33m/\u001b[0m \u001b[0mz\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m: operands could not be broadcast together with shapes (2,2) (4,) "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6Egb7AB8SqNn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "z = np.array([[2, 4]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XEL0m6DJSqNo",
        "colab_type": "code",
        "outputId": "dca5cce1-1ca0-42e7-ffa9-b923f6dd5f0f",
        "colab": {}
      },
      "source": [
        "z"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[2, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4iCbMFlvSqNq",
        "colab_type": "code",
        "outputId": "011bc42d-da3a-4c2e-fea6-0dc17476a737",
        "colab": {}
      },
      "source": [
        "z.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PV6ELjp1SqNr",
        "colab_type": "code",
        "outputId": "339b3476-d242-410a-aecf-b7893bec3e2b",
        "colab": {}
      },
      "source": [
        "x / z"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.5,  0.5],\n",
              "       [ 1.5,  1. ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xEfQTEXxSqNs",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "zz = np.concatenate([z, z], axis=0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7lmF7-zaSqNs",
        "colab_type": "code",
        "outputId": "8e6a0227-5a3a-4da8-eaff-dfb53f06555d",
        "colab": {}
      },
      "source": [
        "zz"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[2, 4],\n",
              "       [2, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WR2TMKl3SqNt",
        "colab_type": "code",
        "outputId": "8a45f69d-b5a2-46ae-cdce-5490dfd65732",
        "colab": {}
      },
      "source": [
        "x / zz"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.5,  0.5],\n",
              "       [ 1.5,  1. ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9msVYNcsSqNu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "z = np.array([[2], [4]])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sjc_jeXuSqNv",
        "colab_type": "code",
        "outputId": "acb2a81b-27bf-4d74-a9d0-4b4d01ff04a8",
        "colab": {}
      },
      "source": [
        "z.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mzo8BygySqNw",
        "colab_type": "code",
        "outputId": "3291712d-f7c9-4a72-9f82-2b5141b75e53",
        "colab": {}
      },
      "source": [
        "x / z"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.5 ,  1.  ],\n",
              "       [ 0.75,  1.  ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FtS1tpWRSqNx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "zz = np.concatenate([z, z], axis=1)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Hgq-YrcySqNz",
        "colab_type": "code",
        "outputId": "8856191e-e9b3-42fd-8621-7373a833ddd0",
        "colab": {}
      },
      "source": [
        "zz"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[2, 2],\n",
              "       [4, 4]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 158
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lwl0-Ic1SqN5",
        "colab_type": "code",
        "outputId": "389e5023-1e52-4eae-bcc3-ef5ccad44b91",
        "colab": {}
      },
      "source": [
        "x / zz"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.5 ,  1.  ],\n",
              "       [ 0.75,  1.  ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 159
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e41E58Y6SqN6",
        "colab_type": "code",
        "outputId": "7427c0dd-f5b4-4341-99c5-c3f78ec4e593",
        "colab": {}
      },
      "source": [
        "x = np.array([[1, 3], [2, 4]])\n",
        "x = x + y\n",
        "x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 6,  9],\n",
              "       [ 9, 12]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NNTyMUYSSqN7",
        "colab_type": "code",
        "outputId": "c108588c-a98f-4c3c-c8e6-922019d4a668",
        "colab": {}
      },
      "source": [
        "x = np.array([[1, 3], [2, 4]])\n",
        "x += y\n",
        "x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 6,  9],\n",
              "       [ 9, 12]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xCLFpI3lSqN9",
        "colab_type": "text"
      },
      "source": [
        "### Elementwise functions"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xuzi2U1YSqN9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.linspace(-1, 1, 11)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JttG7yezSqN-",
        "colab_type": "code",
        "outputId": "2097ad95-c330-4d51-a20d-b5cb9b9a84ec",
        "colab": {}
      },
      "source": [
        "x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-1. , -0.8, -0.6, -0.4, -0.2,  0. ,  0.2,  0.4,  0.6,  0.8,  1. ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-1i2ECwaSqN_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y = np.sin(np.pi * x)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m46dAAg-SqOA",
        "colab_type": "code",
        "outputId": "5e40784a-01f6-4de4-a09d-911ece69a223",
        "colab": {}
      },
      "source": [
        "np.round(y, decimals=4)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-0.    , -0.5878, -0.9511, -0.9511, -0.5878,  0.    ,  0.5878,\n",
              "        0.9511,  0.9511,  0.5878,  0.    ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sjr1ErVmSqOB",
        "colab_type": "code",
        "outputId": "f60eb6d4-dcd0-4dc0-863d-29e554a7ae78",
        "colab": {}
      },
      "source": [
        "np.add(np.sin(x) ** 2, np.cos(x) ** 2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 166
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oKOslzioSqOC",
        "colab_type": "code",
        "outputId": "67362934-f167-4b9d-8045-5ef430160333",
        "colab": {}
      },
      "source": [
        "np.sin(x) ** 2 + np.cos(x) ** 2"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 167
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ingYzEJESqOC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def heaviside(x):\n",
        "    return 1 if x > 0 else 0"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bZn1DzRTSqOD",
        "colab_type": "code",
        "outputId": "d5068a09-78d1-4998-880e-31c18061dfc2",
        "colab": {}
      },
      "source": [
        "heaviside(-1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 169
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AjAFzpMNSqOE",
        "colab_type": "code",
        "outputId": "b99372cf-b628-41fc-b8ab-948a5fc28abc",
        "colab": {}
      },
      "source": [
        "heaviside(1.5)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 170
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ULDxuao9SqOF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.linspace(-5, 5, 11)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3iuk-hL5SqOF",
        "colab_type": "code",
        "outputId": "1d76f594-7400-4d9f-a52f-8b57152bf635",
        "colab": {}
      },
      "source": [
        "heaviside(x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[1;32m<ipython-input-172-fe9fb94bcf99>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mheaviside\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[1;32m<ipython-input-168-01b8e2f570bc>\u001b[0m in \u001b[0;36mheaviside\u001b[1;34m(x)\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mheaviside\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[1;36m1\u001b[0m \u001b[1;32mif\u001b[0m \u001b[0mx\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m0\u001b[0m \u001b[1;32melse\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gSU01JrHSqOG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "heaviside = np.vectorize(heaviside)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TBRYXjX2SqOH",
        "colab_type": "code",
        "outputId": "8bc75df4-f6b8-4219-e71b-e2f2d62ffcdf",
        "colab": {}
      },
      "source": [
        "heaviside(x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 174
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zE0MGnx1SqOI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def heaviside(x):\n",
        "    return 1.0 * (x > 0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0c_dWuYUSqOJ",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #6 </font>  \n",
        "\n",
        "1.  Create a function \"sigmoid\" that takes one variable $x$ as input and returns $\\frac{1}{1 + e^{-x}}$ as output\n",
        "2.  Create a 2-dimensional array A of random numbers of size 3x4\n",
        "3.  Let S = sigmoid(A).  Print S\n",
        "\n",
        "**Note this is an example of broadcasting: applying an operation to every element of an object, where the operation was only meant between elements**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ng9qRF10lDQS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        },
        "outputId": "fb9f7692-91e2-463a-dac3-2d6344aedb2b"
      },
      "source": [
        "#Create a function \"sigmoid\" that takes one variable  𝑥  as input and returns  11+𝑒−𝑥  as output\n",
        "\n",
        "import math\n",
        "def sigmoid(x):\n",
        "    out =  1 / (1 + math.e ** (-x) )\n",
        "    return out\n",
        "\n",
        "a = int(input(\"Input a value for x : \"))\n",
        "\n",
        "print(sigmoid(a))"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Input a value for x : 2\n",
            "0.8807970779778823\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Idl_pg4SmDb3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66
        },
        "outputId": "c6c0a2c3-e299-4fb3-a770-eddb25f5e17e"
      },
      "source": [
        "# Create a 2-dimensional array A of random numbers of size 3x4\n",
        "A = np.random.rand(3, 4) \n",
        "A"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.59392725, 0.13152064, 0.62607789, 0.00966375],\n",
              "       [0.55264188, 0.11336207, 0.49520682, 0.49985117],\n",
              "       [0.15738554, 0.82915309, 0.30681025, 0.61270869]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vLwfwdy_pfPB",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66
        },
        "outputId": "ce3e475a-52f9-43f6-904e-37e39c96b469"
      },
      "source": [
        "# Let S = sigmoid(A). Print S\n",
        "\n",
        "S = sigmoid(A)\n",
        "print(S)"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[0.64426573 0.53283285 0.6515996  0.50241592]\n",
            " [0.63474831 0.52831021 0.62133226 0.62242435]\n",
            " [0.53926537 0.69617583 0.57610649 0.64855844]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dMK87aRjSqOJ",
        "colab_type": "text"
      },
      "source": [
        "### Aggregate functions"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "jv-jaPDWSqOJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.random.normal(size=(15,15))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TLX29Y42SqOK",
        "colab_type": "code",
        "outputId": "7597879c-3f9c-4f33-896e-1b7cb8880b4f",
        "colab": {}
      },
      "source": [
        "np.mean(data)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-0.074403636812459123"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 177
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j0OKUKVXSqOM",
        "colab_type": "code",
        "outputId": "227940ec-ad51-48db-c76e-767403be6f8b",
        "colab": {}
      },
      "source": [
        "data.mean()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-0.074403636812459123"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "gZwSLo5FSqOO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.random.normal(size=(5, 10, 15))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D8JRSKZ5SqOP",
        "colab_type": "code",
        "outputId": "0aeade1d-3ffe-442f-bd22-82afe22d83d6",
        "colab": {}
      },
      "source": [
        "data.sum(axis=0).shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10, 15)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 180
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aJIK-_D9SqOP",
        "colab_type": "code",
        "outputId": "9ceb1c31-9092-4fba-e344-367f8056c42e",
        "colab": {}
      },
      "source": [
        "data.sum(axis=(0, 2)).shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BcfkRro1SqOR",
        "colab_type": "code",
        "outputId": "f81425fa-8506-463d-dc13-bacd2d23aed0",
        "colab": {}
      },
      "source": [
        "data.sum()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11.003615133940048"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "ymXGTYNDSqOS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = np.arange(1,10).reshape(3,3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M13-JJqGSqOT",
        "colab_type": "code",
        "outputId": "8c267cc7-1ca6-4e02-ba61-c8048b649c9b",
        "colab": {}
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2, 3],\n",
              "       [4, 5, 6],\n",
              "       [7, 8, 9]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tzoUtYDXSqOU",
        "colab_type": "code",
        "outputId": "5a046362-714e-4630-b7c3-df992db8829b",
        "colab": {}
      },
      "source": [
        "data.sum()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "45"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 185
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tG8DXD0nSqOU",
        "colab_type": "code",
        "outputId": "924936bf-11b7-49cf-a75d-a75bb974547c",
        "colab": {}
      },
      "source": [
        "data.sum(axis=0)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([12, 15, 18])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kWAcmjmeSqOV",
        "colab_type": "code",
        "outputId": "60e14f25-348d-4dac-ce3f-740473092cfb",
        "colab": {}
      },
      "source": [
        "data.sum(axis=1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 6, 15, 24])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 187
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jypIA8jcSqOW",
        "colab_type": "text"
      },
      "source": [
        "### Boolean arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "mSD6IQjiSqOW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "a = np.array([1, 2, 3, 4])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "YX0-PoTvSqOX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "b = np.array([4, 3, 2, 1])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wRudgl19SqOY",
        "colab_type": "code",
        "outputId": "d37d7b17-2a0b-4ecf-ba8a-68eb20145e51",
        "colab": {}
      },
      "source": [
        "a < b"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ True,  True, False, False], dtype=bool)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qRjzgIthSqOY",
        "colab_type": "code",
        "outputId": "cb309dd6-1ed3-4618-ee67-88e15ed8a623",
        "colab": {}
      },
      "source": [
        "np.all(a < b)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V7mNn_-8SqOZ",
        "colab_type": "code",
        "outputId": "a7612843-8ca8-4a0f-daf5-3b1d3d06227d",
        "colab": {}
      },
      "source": [
        "np.any(a < b)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "uPqljEivSqOa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.array([-2, -1, 0, 1, 2])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GMwXb4ciSqOb",
        "colab_type": "code",
        "outputId": "3b110ff8-edfe-4eba-db64-6ef5c0a99ff7",
        "colab": {}
      },
      "source": [
        "x > 0"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([False, False, False,  True,  True], dtype=bool)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 195
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zX_jVIIfSqOc",
        "colab_type": "code",
        "outputId": "78f49f19-6363-4687-843a-1a63e1c5cbd0",
        "colab": {}
      },
      "source": [
        "1 * (x > 0)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 1, 1])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 196
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eD4_UDrVSqOd",
        "colab_type": "code",
        "outputId": "242d642f-0868-474a-bd68-d95c1c26ae0f",
        "colab": {}
      },
      "source": [
        "x * (x > 0)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 1, 2])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "n4PV22GKSqOe",
        "colab_type": "text"
      },
      "source": [
        "# Set operations"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JLG0lh0jSqOe",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "a = np.unique([1,2,3,3])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GUORVHFZSqOf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "b = np.unique([2,3,4,4,5,6,5])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pLfqyDKdSqOf",
        "colab_type": "code",
        "outputId": "b074ac64-f179-4a47-87c0-fbcf525b9ce2",
        "colab": {}
      },
      "source": [
        "np.in1d(a, b)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([False,  True,  True], dtype=bool)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 212
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LMcDpgWjSqOg",
        "colab_type": "code",
        "outputId": "8cd037b9-2a63-4e91-a7fd-5aec0b0f5a85",
        "colab": {}
      },
      "source": [
        "1 in a"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gn3YFGImSqOh",
        "colab_type": "code",
        "outputId": "9e4e1372-e669-4c86-e48b-2bfe9d4f91be",
        "colab": {}
      },
      "source": [
        "1 in b"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XPSn4k05SqOh",
        "colab_type": "code",
        "outputId": "634a3db8-3782-4bbe-d6ce-5f3c8e8f6e8a",
        "colab": {}
      },
      "source": [
        "np.all(np.in1d(a, b))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 215
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_gs2FbGQSqOi",
        "colab_type": "code",
        "outputId": "57ac3165-8e68-4e1f-95ba-ac32a085a2e5",
        "colab": {}
      },
      "source": [
        "np.union1d(a, b)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4, 5, 6])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 216
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bZJ6pTQ6SqOj",
        "colab_type": "code",
        "outputId": "a2b73da6-93e0-4c6d-ec78-7fd9618d86dd",
        "colab": {}
      },
      "source": [
        "np.intersect1d(a, b)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2, 3])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iGkM8WuSSqOk",
        "colab_type": "code",
        "outputId": "a4f4c7ec-4790-40d7-efb3-bba5352ef687",
        "colab": {}
      },
      "source": [
        "np.setdiff1d(a, b)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 218
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zj8nK0QDSqOo",
        "colab_type": "code",
        "outputId": "008344d4-69a2-4e09-b5b9-234e42e95152",
        "colab": {}
      },
      "source": [
        "np.setdiff1d(b, a)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([4, 5, 6])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 219
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SlB0KPUGSqOo",
        "colab_type": "text"
      },
      "source": [
        "### <font color = 'blue'> Exercise #7 </font> \n",
        "1.  Let the **list** L = ['M', 'A', 'S', 'S', 'A', 'C', 'H', 'U', 'S', 'E', 'T', 'S']\n",
        "2.  Use the **set** operation to find the unique entries in the list, call it S.  \n",
        "3.  Use the **zip** operation to now create Z = ordered pairs unique entries of L in alphabatical order with integer 0, 1, 2, 3 etc. \n",
        "4.  Print the entries of Z"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0g933A5qp1wU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "8e784814-318f-4939-8088-b8e88348ebca"
      },
      "source": [
        "L = list = [\"M\", \"A\", \"S\", \"S\", \"A\", \"C\", \"H\", \"U\", \"S\", \"E\", \"T\", \"S\"]\n",
        "L"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['M', 'A', 'S', 'S', 'A', 'C', 'H', 'U', 'S', 'E', 'T', 'S']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g4ZsjQw9qxod",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "523dc3a7-65d7-47e6-fd69-52655d2bc260"
      },
      "source": [
        "S = set(L)\n",
        "S"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'A', 'C', 'E', 'H', 'M', 'S', 'T', 'U'}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XTMwqqTrq5L_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "9fdcd2ae-0945-4623-a63d-8cedf29e74cb"
      },
      "source": [
        "numbersList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n",
        "\n",
        "result = zip(zip (L, numbersList) )\n",
        "result\n"
      ],
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<zip at 0x7fc0ad196fc8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KHy_Mb3ESqOp",
        "colab_type": "text"
      },
      "source": [
        "## Matrix and vector operations"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v2HUoj_VSqOp",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.arange(1, 7).reshape(2, 3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mfEPwzBcSqOq",
        "colab_type": "code",
        "outputId": "ebda1140-1ba7-446f-ad94-0ca10c98df36",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2, 3],\n",
              "       [4, 5, 6]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 227
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ulN5QFm6SqOr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = np.arange(1, 7).reshape(3, 2)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WxsllGmmSqOr",
        "colab_type": "code",
        "outputId": "f28420b3-651f-4d01-d810-7e0603011bca",
        "colab": {}
      },
      "source": [
        "B"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2],\n",
              "       [3, 4],\n",
              "       [5, 6]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fxcfb9dCSqOs",
        "colab_type": "code",
        "outputId": "321dbf75-f4cd-4346-af0c-f141ea546943",
        "colab": {}
      },
      "source": [
        "np.dot(A, B)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[22, 28],\n",
              "       [49, 64]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 230
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T0_feJFqSqOt",
        "colab_type": "code",
        "outputId": "fc69a7fb-56a1-4777-b04c-86925eb874bc",
        "colab": {}
      },
      "source": [
        "np.dot(B, A)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 9, 12, 15],\n",
              "       [19, 26, 33],\n",
              "       [29, 40, 51]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 231
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4dtJKDUrSqOu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.arange(9).reshape(3, 3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bisvPl68SqOv",
        "colab_type": "code",
        "outputId": "78660478-2e7a-4f9c-ea3d-6bd94210c512",
        "colab": {}
      },
      "source": [
        "A"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 1, 2],\n",
              "       [3, 4, 5],\n",
              "       [6, 7, 8]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 233
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Te3ca9swSqOv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.arange(3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7wmtnMYTSqOw",
        "colab_type": "code",
        "outputId": "14551e03-dc1b-4ff6-c3c6-1cba59fe3a2f",
        "colab": {}
      },
      "source": [
        "x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 235
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NHfOwb2HSqOx",
        "colab_type": "code",
        "outputId": "25c6cfb3-87b4-41de-f644-0cb096c6229d",
        "colab": {}
      },
      "source": [
        "np.dot(A, x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 5, 14, 23])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 236
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MJMWd92sSqOy",
        "colab_type": "code",
        "outputId": "247be133-f3f0-4ece-c315-d8b9e3eb5dfa",
        "colab": {}
      },
      "source": [
        "A.dot(x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 5, 14, 23])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 237
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yT7E3T2SSqOy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.random.rand(3,3)\n",
        "B = np.random.rand(3,3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yRTEMiedSqOz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Ap = np.dot(B, np.dot(A, np.linalg.inv(B)))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ERCSZz0iSqO1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Ap = B.dot(A.dot(np.linalg.inv(B)))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_aVceY_WSqO2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.matrix(A)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kvBiHX7_SqO3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = np.matrix(B)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rwk5ro4FSqO4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Ap = B * A * B.I"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r7TLZFN6SqO4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.asmatrix(A)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L3OShSuaSqO6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = np.asmatrix(B)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nyaw0jG-SqO7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Ap = B * A * B.I"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mO8iXmm6SqO8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Ap = np.asarray(Ap)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3eMqP4yZSqO8",
        "colab_type": "code",
        "outputId": "40e4f777-3e90-4087-b9d1-bfb0dd60a4a0",
        "colab": {}
      },
      "source": [
        "np.inner(x, x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 248
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fftESZjvSqO9",
        "colab_type": "code",
        "outputId": "08aa44b8-ab60-4f64-ebb2-6b74b59e4592",
        "colab": {}
      },
      "source": [
        "np.dot(x, x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 249
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8VhHC-DkSqO-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y = x[:, np.newaxis]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mOU_Kht6SqO-",
        "colab_type": "code",
        "outputId": "94095c0c-e2a4-4e91-d9e3-ad5be75f543c",
        "colab": {}
      },
      "source": [
        "y"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0],\n",
              "       [1],\n",
              "       [2]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 251
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cqEcrvbGSqPA",
        "colab_type": "code",
        "outputId": "15d19790-2c5e-4144-8280-1843ff60dcad",
        "colab": {}
      },
      "source": [
        "np.dot(y.T, y)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[5]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 252
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TFKzA4uLSqPA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.array([1, 2, 3])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ovdeU_QjSqPB",
        "colab_type": "code",
        "outputId": "9392a1de-5e73-4bf6-b8fa-e1a30e224365",
        "colab": {}
      },
      "source": [
        "np.outer(x, x) "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2, 3],\n",
              "       [2, 4, 6],\n",
              "       [3, 6, 9]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 254
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NQ1Ai7UcSqPC",
        "colab_type": "code",
        "outputId": "ef7137d7-70e4-4914-c1b7-5472935ff50c",
        "colab": {}
      },
      "source": [
        "np.kron(x, x) "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 2, 4, 6, 3, 6, 9])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 255
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5KuQl4kDSqPD",
        "colab_type": "code",
        "outputId": "81d0fb79-bd46-408b-c0ad-22ad72749b2b",
        "colab": {}
      },
      "source": [
        "np.kron(x[:, np.newaxis], x[np.newaxis, :])"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2, 3],\n",
              "       [2, 4, 6],\n",
              "       [3, 6, 9]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 256
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JI9XjSHiSqPE",
        "colab_type": "code",
        "outputId": "1e87ef0d-7d95-4392-dbe4-38b00467a4cb",
        "colab": {}
      },
      "source": [
        "np.kron(np.ones((2,2)), np.identity(2))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 1.,  0.,  1.,  0.],\n",
              "       [ 0.,  1.,  0.,  1.],\n",
              "       [ 1.,  0.,  1.,  0.],\n",
              "       [ 0.,  1.,  0.,  1.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 257
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ugcmkPWGSqPF",
        "colab_type": "code",
        "outputId": "195c7fae-2a2f-4379-9f96-2a7cdb29a6d0",
        "colab": {}
      },
      "source": [
        "np.kron(np.identity(2), np.ones((2,2)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 1.,  1.,  0.,  0.],\n",
              "       [ 1.,  1.,  0.,  0.],\n",
              "       [ 0.,  0.,  1.,  1.],\n",
              "       [ 0.,  0.,  1.,  1.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 258
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZJ9QHOBySqPG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.array([1, 2, 3, 4])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JqANQNnTSqPG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y = np.array([5, 6, 7, 8])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pNATlI3HSqPH",
        "colab_type": "code",
        "outputId": "bfad9b4a-37da-4151-b2e0-b90c25da9be5",
        "colab": {}
      },
      "source": [
        "np.einsum(\"n,n\", x, y)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "70"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 261
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YsK3OAiwSqPI",
        "colab_type": "code",
        "outputId": "a585a982-fe59-444c-c486-d3e964a6f416",
        "colab": {}
      },
      "source": [
        "np.inner(x, y)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "70"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 262
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YqlDw9__SqPI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "A = np.arange(9).reshape(3, 3)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R3w_gRekSqPJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "B = A.T"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qhcDJrBxSqPK",
        "colab_type": "code",
        "outputId": "f0a9c4ba-5965-43cf-da4f-a74d667c5496",
        "colab": {}
      },
      "source": [
        "np.einsum(\"mk,kn\", A, B)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[  5,  14,  23],\n",
              "       [ 14,  50,  86],\n",
              "       [ 23,  86, 149]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 265
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ePWOvRLmSqPL",
        "colab_type": "code",
        "outputId": "99bba504-ff34-4f0e-ab80-cbad8c03f53e",
        "colab": {}
      },
      "source": [
        "np.alltrue(np.einsum(\"mk,kn\", A, B) == np.dot(A, B))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 266
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1OydluUHSqPM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}
